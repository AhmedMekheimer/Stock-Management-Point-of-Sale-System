@model RoleVM.RoleViewModel
<style>
    .child-permissions {
        list-style: none;
        padding-left: 0;
    }

        .child-permissions li {
            margin-bottom: 5px;
        }

    .toggle-children {
        width: 30px;
        height: 30px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        font-weight: bold;
        cursor: pointer;
        border: 1px solid #ccc;
    }



</style>

<div class="p-3">

    <h3 class="mt-3">Permissions</h3>
    <form asp-action="Save" method="post">


        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
        <input type="hidden" asp-for="RoleId" />


        <ul class="list-unstyled">
            @foreach (var permission in Model.PermissionsTree)
            {
                <partial name="_PermissionTreePartial" model="permission" />
            }
        </ul>

        @if (User.HasClaim("Permission", "Role.Add"))
        {
            <button type="submit" class="btn btn-primary mt-3">Save</button>
        }

    </form>
</div>
@section Scripts {

<script>
$(document).ready(function () {

    // Collapse / expand children
    $(".toggle-children").on("click", function () {
        var $btn = $(this);
        var $ul = $btn.closest("li").find("> .child-permissions");
        if ($ul.is(":visible")) {
            $ul.slideUp();
            $btn.text("+");
        } else {
            $ul.slideDown();
            $btn.text("-");
        }
    });

    // Parent-child checkbox sync
    $(".parent-checkbox").on("change", function () {
        var $li = $(this).closest("li");
        $li.find("input[type=checkbox]").prop("checked", $(this).prop("checked"));
    });

        $("input[type=checkbox]").on("change", function () {
            var $li = $(this).closest("ul").closest("li");
            if ($li.length) {
                var $children = $li.find("> .child-permissions input[type=checkbox]");
                var $parentInput = $li.find("> .form-check > input[type=checkbox]");

                if ($children.length) {
                    var checkedCount = $children.filter(":checked").length;

                    if (checkedCount === 0) {
                        $parentInput.prop("checked", false).prop("indeterminate", false);
                    } else if (checkedCount === $children.length) {
                        $parentInput.prop("checked", true).prop("indeterminate", false);
                    } else {
                        $parentInput.prop("checked", true).prop("indeterminate", true);
                    }
                }
            }
        });


});

</script>


}
